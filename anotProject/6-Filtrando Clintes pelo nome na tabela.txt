Anot Project 

Filtrando Clientes pelo nome na tabela

1° Cria-se o metodo filtrar clientes
(CliensteDao)
public List<Clientes>filtrar(String nome){
	List<Clientes> lista = new ArrayList<>();
	try {
		String sql = "SELECT * FROM tb_clientes WHERE nome LIKE ?";
		PreparedStatement stmt = conn.prepareStatement(sql); 
		stmt.setString(1, nome);
		ResultSet rs = stmt.executeQuery();
			
		//PERCORRERA TODA A LISTA
		while(rs.next()) {
			Clientes obj = new Clientes();
			obj.setId(rs.getInt("id"));
			obj.setNome(rs.getString("nome"));
			obj.setRg(rs.getString("rg"));
			obj.setCpf(rs.getString("cpf"));
			obj.setEmail(rs.getString("email"));
			obj.setTelefone(rs.getString("telefone")); 
			obj.setCelular(rs.getString("celular"));
			obj.setCep(rs.getString("cep"));
			obj.setEndereco(rs.getString("endereco"));
			obj.setNumero(rs.getInt("numero"));
			obj.setComplemento(rs.getString("complemento"));
			obj.setBairro(rs.getString("bairro"));
			obj.setCidade(rs.getString("cidade"));
			obj.setEstado(rs.getString("estado"));
				
			lista.add(obj);
		}
		return lista; 
	} catch (SQLException e) {
		JOptionPane.showMessageDialog(null, "ERRO, ao criar a lista: " + e);
	}
	return null;
}


(FormsCliente)
-Na 2° aba cria-se um actionListener no botão btnPesquisarCliente
 btnPesquisaCliente.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		String filtNome = "%"+txtNomeConsultaCliente.getText()+"%";
        		ClientesDao dao = new ClientesDao();
            	List<Clientes> lista = dao.filtrar(filtNome);
            	DefaultTableModel dados = (DefaultTableModel) tabela.getModel(); //CONVERTIDO PARA A TABELA 'DEFAULTTABLEMODEL'
            	dados.setNumRows(0); //0 IGUAL A POSIÇÃO INICIAL DA MATRIZ
            	for(Clientes c : lista) {
            		dados.addRow(new Object[]{
            			c.getId(),
            			c.getNome(),
            			c.getRg(),
            			c.getCpf(),
            			c.getEmail(),
            			c.getTelefone(),
            			c.getCelular(),
            			c.getCep(),
            			c.getEndereco(),
            			c.getNumero(),
            			c.getComplemento(),
            			c.getBairro(),
            			c.getCidade(),
            			c.getEstado()	
            		});
            	}
        	}
        });


(FormCliente)
3° no campo de texto da 2° aba cria-se um 'key released' após isso
     copia esse mesmo codigo e adiciona no campo de txt da 2°aba 'txtNomeConsultaCliente'

txtNomeConsultaCliente.addKeyListener(new KeyAdapter() {
        	@Override
        	//FILTRAGEM DE CLENTES
        	public void keyReleased(KeyEvent e) {
        		String filtNome = "%"+txtNomeConsultaCliente.getText()+"%";
        		ClientesDao dao = new ClientesDao();
            	List<Clientes> lista = dao.filtrar(filtNome);
            	DefaultTableModel dados = (DefaultTableModel) tabela.getModel(); //CONVERTIDO PARA A TABELA 'DEFAULTTABLEMODEL'
            	dados.setNumRows(0); //0 IGUAL A POSIÇÃO INICIAL DA MATRIZ
            	for(Clientes c : lista) {
            		dados.addRow(new Object[]{
            			c.getId(),
            			c.getNome(),
            			c.getRg(),
            			c.getCpf(),
            			c.getEmail(),
            			c.getTelefone(),
            			c.getCelular(),
            			c.getCep(),
            			c.getEndereco(),
            			c.getNumero(),
            			c.getComplemento(),
            			c.getBairro(),
            			c.getCidade(),
            			c.getEstado()	
            		});
            	}
        	}
        });